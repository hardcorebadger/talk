package trefethen.talk.gui;

import java.awt.Color;
import java.awt.Container;
import java.util.Stack;

import javax.swing.JFrame;
import javax.swing.JPanel;

import trefethen.talk.client.TalkClient;
import trefethen.talk.packet.PacketChatHistory;
import trefethen.talk.packet.PacketChatMessage;
import trefethen.talk.packet.PacketLogin;
import trefethen.talk.packet.PacketRegister;
import trefethen.talk.packet.PacketUserChats;

public class GUIManager {
	
	private static JFrame frame;
	private static Container frameContainer;
	
	private static Container mainContainer;
	private static Container overlayContainer;
	
	private static Stack<Screen> screenStack = new Stack<>();
	
	public static String username;
	public static int userID;
		
	public static void initialize() {
		frame = new JFrame("Talk");
		frame.setSize(400,400);
		
		frameContainer = frame.getContentPane();
		frameContainer.setLayout(null);
		frameContainer.setBackground(GUIFactory.white);
		
		mainContainer = new Container();
		mainContainer.setLayout(null);
		mainContainer.setSize(400, 400);
		
		JPanel p = new JPanel();
		p.setBackground(Color.black);
		p.setSize(400, 400);
		mainContainer.add(p);
		
		frameContainer.add(mainContainer);
		
		overlayContainer = new Container();
		overlayContainer.setLayout(null);
		overlayContainer.setSize(400, 400);
		
		p = new JPanel();
		p.setBackground(Color.gray);
		p.setSize(400, 200);
		overlayContainer.add(p);
		
		frameContainer.add(overlayContainer);
		
		
		frame.setResizable(false);
		frame.setVisible(true);
		
		pushScreen(new ScreenLogin());

	}
	
	public static void pushScreen(Screen s) {
		if (!screenStack.isEmpty())
			screenStack.peek().onDisable();
		screenStack.push(s);
//		contentPanel.removeAll();
		s.onEnable();
		s.onOpen();
		frameContainer.validate();
	}
	
	public static void popScreen() {
		if (screenStack.isEmpty())
			return;
		Screen s = screenStack.pop();
		s.onDisable();
		s.onClose();
//		contentPanel.removeAll();
		if (!screenStack.isEmpty())
			screenStack.peek().onEnable();
		frameContainer.validate();
	}
	
	public static void setNavBar(String title) {
//		navBar.label.setText(title);
	}

	/*
	 * Response Handlers
	 */
	
	public static void asyncOnLoginResponse(PacketLogin p) {
		if (p.loginID == -1) {

		} else if (p.loginID == -2) {

		} else {
			// continue to main
			username = p.name;
			userID = p.loginID;
			
			TalkClient.client.addPacket(new PacketUserChats());
		}
	}
	
	public static void asyncOnRegisterResponse(PacketRegister p) {
		if (p.responseCode == 1) {
			// Register Successful
			
		} else {
			// Username Taken

		}
	}
	
	public static void asyncOnUserChatsResponse(PacketUserChats p) {

	}
	
	public static void asyncOnChatHistoryResponse(PacketChatHistory p) {

	}
	
	public static void asynOnChatMessage(PacketChatMessage p) {

	}
}
