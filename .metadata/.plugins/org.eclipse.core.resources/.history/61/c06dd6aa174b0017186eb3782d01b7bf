package trefethen.talk.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

public class GUIFactory {
	
	public static Color white = Color.white;
	public static Color light = new Color(230,231,232);
	public static Color dark = new Color(41,40,42);

	public static Dimension standardDimension = new Dimension(400,50);
	
	public static Font monix;
	public static Font clearSans;
	
	private static ImageIcon buttonBg =  new ImageIcon("resources/gui/button-bg.png");

	static {
		try {
			GraphicsEnvironment genv = GraphicsEnvironment.getLocalGraphicsEnvironment();
			
			monix = Font.createFont(Font.TRUETYPE_FONT, new FileInputStream("resources/gui/monix.otf"));
			genv.registerFont(monix);
			monix = monix.deriveFont(14f);
			
			clearSans = Font.createFont(Font.TRUETYPE_FONT, new FileInputStream("resources/gui/clearsans.ttf"));
			genv.registerFont(clearSans);
			clearSans = clearSans.deriveFont(12f);
			
			Image i;
			i = buttonBg.getImage();
			buttonBg = new ImageIcon(i.getScaledInstance(200, 25, java.awt.Image.SCALE_SMOOTH));
			
		} catch (Exception e) {
			e.printStackTrace();
		}  
	}
	
	public static JTextField createTextField() {
		JTextField text = new JTextField(20);
		text.setBackground(dark);
		text.setForeground(white);
//		text.setMaximumSize(standardDimension);
		return text;
	}
	
	public static JPasswordField createPasswordField() {
		JPasswordField text = new JPasswordField(20);
		text.setBackground(dark);
//		text.setMaximumSize(standardDimension);
		return text;
	}
	
	public static JButton createChatButton(String name, boolean online) {
		System.out.println(online);
		JButton btn = new JButton(name);
		btn.setIcon(buttonBg);
		btn.setFont(clearSans);
		btn.setPreferredSize(standardDimension);
		btn.setMaximumSize(standardDimension);
		btn.setMinimumSize(standardDimension);
		btn.setHorizontalAlignment(SwingConstants.LEFT);
		if (!online) {
			btn.setText("("+name+")");
		}
		return btn;
	}
	
	public static JButton createButton(String name) {
		JButton btn = new JButton(name);
		btn.setFont(clearSans);
		btn.setIcon(buttonBg);
		btn.setPreferredSize(standardDimension);
		btn.setMaximumSize(standardDimension);
		btn.setMinimumSize(standardDimension);
		btn.setHorizontalAlignment(SwingConstants.LEFT);
		return btn;
	}
	
	public static JTextArea createChatMessageArea() {
		JTextArea a = new JTextArea();
		a.setFont(clearSans);
		a.setMinimumSize(new Dimension(400,250));
		return a;
	}
	
	public static JScrollPane scrollWrap(JComponent c) {
		JScrollPane a = new JScrollPane();
		a.setViewportView(c);
		a.setPreferredSize(new Dimension(400,250));
		a.setMaximumSize(new Dimension(400,250));
		a.setMinimumSize(new Dimension(400,250));
		return a;
	}
	
	public static Box wrap(JComponent c) {
		Box box = new Box(0);
		box.setPreferredSize(standardDimension);
		box.setMaximumSize(standardDimension);
		box.setMinimumSize(standardDimension);
//		box.setLayout(new GridLayout(1,1));
		box.add(c);
		return box;
	}
	
	public static Box wrap(JComponent c, Dimension d) {
		Box box = new Box(0);
		box.setPreferredSize(d);
		box.setMaximumSize(d);
		box.setMinimumSize(d);
//		box.setLayout(new GridLayout(1,1));
		box.add(c);
		return box;
	}

}
